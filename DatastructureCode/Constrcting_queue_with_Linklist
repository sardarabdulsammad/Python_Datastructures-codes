class Node:
  def __init__(self,value):
    self.value=value
    self.next=None
  

class Queue:
  def __init__(self):
    self.first = None
    self.last = None
    self.length = 0


  def Enqueue(self, value):
    newnode=Node(value)
    if(self.first==None and self.last == None):
      self.first = newnode
      self.last = newnode

    else:
      self.last.next=newnode
      self.last=newnode
    self.length+=1

  def Dequeue(self):
    if self.first == None and self.last == None:
      return("stack is Empty Enqueue something")
    elif self.first == self.last and self.length == 1:
      del self.last
      del self.first
      self.length-=1
      return("The Queue is now empty")
    else: 
      self.first=self.first.next
      self.length-=1
      return self

  def peek(self):
    return self.first


newQ=Queue()
newQ.Enqueue(25)
newQ.Enqueue(20)
newQ.Enqueue(15)
print(newQ.first.value)
print(newQ.last.value)
print(newQ.length)
newQ.Dequeue()
print(newQ.first.value)
print(newQ.last.value)
print(newQ.length)
